# ═══════════════════════════════════════════════════════════
# ROCINHA ENTREGA - Variáveis de Ambiente
# ═══════════════════════════════════════════════════════════
# 
# IMPORTANTE: 
# - Copie este arquivo para .env e preencha com seus valores
# - NUNCA commite o arquivo .env no Git (já está no .gitignore)
# - Mantenha este template atualizado quando adicionar novas variáveis
#
# ═══════════════════════════════════════════════════════════

# ─────────────────────────────────────────────────────────
# 🤖 TELEGRAM BOT
# ─────────────────────────────────────────────────────────
# Token do bot do Telegram
# Obtenha em: https://t.me/BotFather
# Exemplo: 1234567890:ABCdefGHIjklMNOpqrsTUVwxyz
BOT_TOKEN=seu_token_aqui

# Username do bot (sem @)
# Exemplo: rocinha_entrega_bot
BOT_USERNAME=seu_bot_username

# ─────────────────────────────────────────────────────────
# 🗄️  BANCO DE DADOS
# ─────────────────────────────────────────────────────────
# URL de conexão com o banco de dados

# DESENVOLVIMENTO (SQLite - local)
# DATABASE_URL=sqlite:///./database.sqlite

# PRODUÇÃO (PostgreSQL - Supabase)
# IMPORTANTE: Use porta 6543 (pgbouncer) para conexões pooled
# Formato: postgresql://postgres:SENHA@HOST.supabase.co:6543/postgres?sslmode=require
# DATABASE_URL=postgresql://postgres:SUA_SENHA@db.xxx.supabase.co:6543/postgres

# PRODUÇÃO (PostgreSQL - Railway)
# Railway fornece a DATABASE_URL automaticamente
# Deixe em branco ou comente esta linha se estiver usando Railway
DATABASE_URL=postgresql://user:password@host:5432/database

# ─────────────────────────────────────────────────────────
# 🌐 API WEB
# ─────────────────────────────────────────────────────────
# Porta do servidor web (padrão: 8000)
PORT=8000

# URL pública do webhook (para produção)
# Exemplo: https://seu-app.railway.app
# WEBHOOK_URL=https://seu-app.railway.app

# CORS - Origens permitidas (separadas por vírgula)
# Desenvolvimento: http://localhost:8000
# Produção: adicione seus domínios autorizados
# Exemplo: https://rocinha-entrega.railway.app,https://meu-frontend.com
ALLOWED_ORIGINS=http://localhost:8000

# ─────────────────────────────────────────────────────────
# 🤖 INTELIGÊNCIA ARTIFICIAL (Groq)
# ─────────────────────────────────────────────────────────
# API Key do Groq (para relatórios com IA)
# Obtenha em: https://console.groq.com/keys
# Exemplo: gsk_xxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# IMPORTANTE: Relatórios continuam funcionando sem IA se não configurado
GROQ_API_KEY=sua_chave_groq_aqui

# ─────────────────────────────────────────────────────────
# 📍 COORDENADAS PADRÃO (Depósito/Ponto de Partida)
# ─────────────────────────────────────────────────────────
# Coordenadas do ponto de partida das rotas (depósito)
# Padrão: Rocinha, Rio de Janeiro
# Ajuste conforme a localização do seu negócio
DEPOT_LAT=-22.9868
DEPOT_LON=-43.1729

# ─────────────────────────────────────────────────────────
# 🔒 SEGURANÇA (Opcional)
# ─────────────────────────────────────────────────────────
# Token secreto para webhook (gerado automaticamente se não informado)
# SECRET_TOKEN=

# ─────────────────────────────────────────────────────────
# 📊 OBSERVABILIDADE (Opcional - Recomendado para Produção)
# ─────────────────────────────────────────────────────────
# Sentry DSN para monitoramento de erros
# Obtenha em: https://sentry.io
# SENTRY_DSN=https://xxx@o123.ingest.sentry.io/456

# Ambiente da aplicação (development, staging, production)
ENVIRONMENT=development

# Nível de log (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# ─────────────────────────────────────────────────────────
# ⚡ PERFORMANCE (Opcional)
# ─────────────────────────────────────────────────────────
# Redis para cache (se disponível)
# REDIS_URL=redis://localhost:6379

# Rate limiting
# RATE_LIMIT_ENABLED=true
# RATE_LIMIT_REQUESTS=30
# RATE_LIMIT_WINDOW=60

# ═══════════════════════════════════════════════════════════
# CHECKLIST DE CONFIGURAÇÃO
# ═══════════════════════════════════════════════════════════
# 
# Para DESENVOLVIMENTO:
# ✓ BOT_TOKEN (obrigatório)
# ✓ BOT_USERNAME (obrigatório)
# ✓ DATABASE_URL (SQLite funciona sem configurar)
# ✓ DEPOT_LAT e DEPOT_LON (ajustar para sua localização)
# 
# Para PRODUÇÃO:
# ✓ Todas as variáveis acima
# ✓ DATABASE_URL (PostgreSQL - Supabase ou Railway)
# ✓ WEBHOOK_URL (URL pública do app)
# ✓ ALLOWED_ORIGINS (domínios autorizados)
# ✓ GROQ_API_KEY (para relatórios com IA)
# ✓ ENVIRONMENT=production
# ✓ SENTRY_DSN (monitoramento de erros)
# 
# ═══════════════════════════════════════════════════════════
